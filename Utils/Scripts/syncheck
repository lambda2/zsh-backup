#!/bin/sh


VERT="\\033[1;32m"
NORMAL="\\033[0;39m"
ROUGE="\\033[1;31m"
ROSE="\\033[1;35m"
BLEU="\\033[1;34m"
BLANC="\\033[0;02m"
BLANCLAIR="\\033[1;08m"
JAUNE="\\033[1;33m"
CYAN="\\033[1;36m"

a=`grep -rin "^  " . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des espaces en fin de ligne..."
else
	echo "$BLANC Recherche des espaces en fin de ligne...$NORMAL "
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"

a=`grep -rin " $" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des espaces en debut de ligne..."
else
	echo "Recherche des espaces en debut de ligne...$NORMAL "
	echo "$ROUGE ✘ $a $NORMAL";
fi
echo " --------------------------------------------------------------------"

a=`grep -rEin "^([\s\t]*)+(int|void|char)+[\ ][^\t]*.*" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des espaces entre le type de retour d'une fonction et sa définition..."
else
	echo "Recherche des espaces entre le type de retour d'une fonction et sa définition...$NORMAL "
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"

a=`grep -rEin "(if|else if|else|while)\(" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des espaces maquants dans une condition / iteration..."
else
	echo "Recherche des espaces maquants dans une condition / iteration...$NORMAL "
	echo "$JAUNE Essayez d'ajouter des espaces avant et apres les parentheses.$NORMAL"
	echo "$JAUNE Ex : $ROUGE while(a==1) $JAUNE devient $VERT while ( a == 1)
	$NORMAL\n"
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"

a=`grep -rinE "^.*[\S]{1,}.*{" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des accolades mal positionnées..."
else
	echo "Recherche des accolades mal positionnées...$NORMAL "
	echo "$JAUNE Une accolade doit toujours se trouver sur une nouvelle ligne, 	et doit y etre seule.$NORMAL\n"
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"

a=`grep -rEin "(printf|puts)" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des fonctions interdites..."
else
	echo "Recherche des fonctions interdites...$NORMAL "
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"

a=`grep -rEin "^([\ \t]*)+(int|void|char)+[\s\t]{0,12}([\*]?)[^ft_]{3,}" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL Recherche des fonctions de commencant pas par [ ft_ ]..."
else
	echo "Recherche des fonctions de commencant pas par [ ft_ ]...$NORMAL "
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"

for i in `find . -name "*.c"`
do
	r=`head -11 $i | grep "+#+  +:+       +#+"`
	if [ "$r" == '' ]
	then
		echo " Pas de header 42 dans le fichier $i"
	else
		echo "$VERT ✔  $NORMAL $i"
	fi
done
echo " --------------------------------------------------------------------"

a=`grep -rinE "^.{81,}$" . | grep -v ".git" | grep -v "Binary"`
if [ "$a" == '' ]
then
	echo "$VERT ✔$NORMAL "
else
	echo "Recherche des lignes de plus de 80 caracteres...$NORMAL "
	echo "$ROUGE ✘ $a $NORMAL ";
fi
echo " --------------------------------------------------------------------"
